name: Package and Release

on:
  push:
    branches: 
      - distrib
#     tags: 
#       - 'v*'

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build:
    runs-on: windows-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          architecture: x64
          python-version: 3.8
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip setuptools wheel cython cffi pypiwin32 -r requirements.txt
          pip install https://github.com/pyinstaller/pyinstaller/tarball/develop
      
      - name: Build Cython ext
        run: python setup.py build_ext --inplace
      
      - name: Make pyinstaller spec
        run: pyi-makespec -F --add-data "./images/*;images" --add-data "./*.png;." --add-data "./*.ico;." -w -i ./images/fablicator.ico fablicator.py
      
      - name: Make pyinstaller build
        run: pyinstaller --clean fablicator.spec -y
      
      - name: Package for release
        run: .\scripts\package_windows.ps1
        shell: powershell
      
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: | 
          draft: false
          prerelease: false
      
      - name: Upload Installer
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: .\release\fablicator_interface-win10.zip
          asset_name: fablicator_interface-win10.zip
          asset_content_type: application/zip
          
      - name: Upload Executable
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: .\release\fablicator_interface-setup-win10.exe
          asset_name: fablicator_interface-setup-win10.exe
          asset_content_type: application/octet-stream